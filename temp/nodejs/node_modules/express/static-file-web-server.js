//程序参数数组
var argv = process.argv;
//[0] node
//[1] static-file-web-server.js
//[2]:port
//[3]: web context root path
//[4]: sdkHome : 用于Node Web服务器检测 ，SDK是否停止Web服务，如果停止的话，Node随之也应该关闭
var port = argv[2];
var contextPath = argv[3];
var sdkHome = argv[4];
var sdkLogsDir = sdkHome+'/logs';
var newSdkLogsDir = sdkLogsDir+'_tmp';

var express = require('express');
var fs =require('fs');
var net = require('net');
var util = require('util');
var app = express();

/**
 *  关闭服务器  = 自杀
 */
function shutdown(){
    var pid = process.pid;
    process.kill(pid);
}

/**
 *  10 秒钟检查一次 SDK 服务器是否可用
 */
setInterval(function(){
    fs.rename(sdkLogsDir,newSdkLogsDir,function(err){
            if(err) {
                //说明SDK正在运行，日志目录无法重命名
            }else{
                //说明SDK已经关闭，关闭了日志文件FD
                //首先，还原原名称
                fs.renameSync(newSdkLogsDir,sdkLogsDir);
                console.log('SDK Web Server was shutdown!');
                console.log('Current Static File Web Server is about to shutdown ...');
                //然后，关闭自己的程序
                shutdown();
            }
        });
},10*1000);

//激活产品模式
app.set('env','production');
app.enabled('view cache');

//app.use('/',express.static(contextPath));
app.use(function(req, res, next){
    var filePath = contextPath + req.url;
    //文件存在的话
    if(fs.existsSync(filePath)) {
        res.sendfile(filePath);
    }else{
        res.send(404,'Resource Not Found : '+req.url);
    }
     res.set('X-Powered-By','SDK SWS');
});

app.listen(port);





